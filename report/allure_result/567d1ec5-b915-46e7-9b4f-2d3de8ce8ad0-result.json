{"name": "我叫dd", "status": "failed", "statusDetails": {"message": "AssertionError: E0002: errcode断言失败, 预期结果:0, 实际结果: 列表[42001] 中不存在 0\n  \nassert 1 == 0", "trace": "self = <test_tag.TestWeChatTag object at 0x0000024E9C7F2070>, case_data = {'des': '我是描述信息2', 'host': '${get_host(wechat)}', 'name': '我叫dd', 'parameters': {'name-des-method': '/data/temp.csv'}, ...}\n\n    @pytest.mark.parametrize(\n        \"case_data\",\n        parameters_util.format_all_case_data(__file__))\n    def test_get_tag(self, case_data):\n        report_format(case_data)  # 处理报告信息\n    \n        try:\n            res, assert_flag, assert_msg = RequestUtil().analysis_yaml(\n                case_data)\n        except Exception as e:\n            error_log(e)\n    \n        if isinstance(res, str):\n            assert False, res\n        print(res.status_code)\n        print(\">>>>>:请求url\")\n        print(res.url)\n        print(\">>>>>:请求body\")\n        print(res.request.body)\n        print(\">>>>>: 响应数据\")\n        print(res.json())\n        allure.attach(res.text, \"响应结果\", allure.attachment_type.JSON)\n        if assert_msg:\n            write_log(assert_msg, \"error\")\n    \n>       assert assert_flag == 0, assert_msg\nE       AssertionError: E0002: errcode断言失败, 预期结果:0, 实际结果: 列表[42001] 中不存在 0\nE         \nE       assert 1 == 0\n\nd:\\Code\\python_learn_code\\video_learn_code\\pytest-autotest\\testcases\\tag\\test_tag.py:52: AssertionError"}, "description": "我是描述信息2", "attachments": [{"name": "响应结果", "source": "45fa8595-37fe-4463-822a-5bc47cc1dba3-attachment.json", "type": "application/json"}, {"name": "log", "source": "7ef611fd-3b49-4c1f-9f9c-ef500071d7b2-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case_data", "value": "{'report_info': {'epic': 'wechat项目', 'feature': '标签管理', 'tags': ['标签1', '标签2']}, 'name': '我叫dd', 'des': '我是描述信息2', 'host': '${get_host(wechat)}', 'parameters': {'name-des-method': '/data/temp.csv'}, 'request': {'url_path': '/cgi-bin/tags/update', 'method': 'post', 'params': {'access_token': '${get_extract_data(access_token)}'}, 'data': {'tag': {'id': 102, 'name': '新的广东${ramdom_num(122, 200)}'}}}, 'validata': [{'equals': {'status_code': 200}}, {'equals': {'errcode': 0}}, {'contains': 'errmsg'}]}"}], "start": 1665130809942, "stop": 1665130810081, "uuid": "9567119d-1bb4-440f-803f-2b5d0c5ff63a", "historyId": "f6d355a644c039523f0e55dd3fb5b5c7", "testCaseId": "846f3a38bbcd628290c12a74b72302a9", "fullName": "testcases.tag.test_tag.TestWeChatTag#test_get_tag", "labels": [{"name": "epic", "value": "wechat项目"}, {"name": "feature", "value": "标签管理"}, {"name": "tag", "value": "标签1"}, {"name": "tag", "value": "标签2"}, {"name": "parentSuite", "value": "testcases.tag"}, {"name": "suite", "value": "test_tag"}, {"name": "subSuite", "value": "TestWeChatTag"}, {"name": "host", "value": "DESKTOP-AKUI69U"}, {"name": "thread", "value": "13944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.tag.test_tag"}]}