{"name": "缺失secret", "status": "failed", "statusDetails": {"message": "AssertionError: E0003: expires_in断言失败, 响应结果中不存在 expires_inE0004: access_token断言失败, 响应结果中不存在 access_token\nassert 2 == 0", "trace": "self = <test_login.TestWeChatLogin object at 0x000001167CE98B50>\ncase_data = {'des': '获取token', 'extract': {'access_token': '\"access_token\":\"(.*?)\"', 'expires_in': 'expires_in'}, 'host': '${get_host(wechat)}', 'name': '缺失secret', ...}\n\n    @pytest.mark.run(order=1)\n    @pytest.mark.parametrize(\n        \"case_data\",\n        parameters_util.format_all_case_data(__file__))\n    def test_get_tag(self, case_data):\n        report_format(case_data)  # 处理报告信息\n    \n        try:\n            res, assert_flag, assert_msg = RequestUtil().analysis_yaml(\n                case_data)\n        except Exception as e:\n            error_log(e)\n    \n        if isinstance(res, str):\n            assert False, res\n        print(res.status_code)\n        print(\">>>>>:请求url\")\n        print(res.url)\n        print(\">>>>>:请求body\")\n        print(res.request.body)\n        print(\">>>>>: 响应数据\")\n        print(res.json())\n        allure.attach(res.text, \"响应结果\", allure.attachment_type.JSON)\n    \n        if assert_msg:\n            write_log(assert_msg, \"error\")\n    \n>       assert assert_flag == 0, assert_msg\nE       AssertionError: E0003: expires_in断言失败, 响应结果中不存在 expires_inE0004: access_token断言失败, 响应结果中不存在 access_token\nE       assert 2 == 0\n\ntestcases\\login\\test_login.py:54: AssertionError"}, "description": "获取token", "attachments": [{"name": "响应结果", "source": "c64e8c1c-f00c-4d17-b3a9-923702646450-attachment.json", "type": "application/json"}, {"name": "log", "source": "ec7ef2d9-67a8-46a4-8923-f7e8df05547b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case_data", "value": "{'report_info': {'epic': 'wechat项目', 'feature': '登录', 'tags': ['登录']}, 'name': '缺失secret', 'des': '获取token', 'host': '${get_host(wechat)}', 'parameters': {'name-des-method-grant_type-appid-secret': '/data/login_data.csv'}, 'request': {'url_path': '/cgi-bin/token', 'method': 'get', 'params': {'grant_type': 'client_credential', 'appid': 'wxd3bf30272b1def4f', 'secret': ''}}, 'extract': {'access_token': '\"access_token\":\"(.*?)\"', 'expires_in': 'expires_in'}, 'validata': [{'equals': {'status_code': 200}}, {'equals': {'expires_in': 7200}}, {'contains': 'access_token'}]}"}], "start": 1664531510402, "stop": 1664531510528, "uuid": "6700bad1-b4c5-4869-ae05-b594b73c8e77", "historyId": "06f5885758f685ae32f7de442b155e36", "testCaseId": "f1e20fa3a03f977e2a19a26feaab482a", "fullName": "testcases.login.test_login.TestWeChatLogin#test_get_tag", "labels": [{"name": "epic", "value": "wechat项目"}, {"name": "feature", "value": "登录"}, {"name": "tag", "value": "登录"}, {"name": "tag", "value": "run(order=1)"}, {"name": "parentSuite", "value": "testcases.login"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestWeChatLogin"}, {"name": "host", "value": "DESKTOP-AKUI69U"}, {"name": "thread", "value": "30004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.login.test_login"}]}