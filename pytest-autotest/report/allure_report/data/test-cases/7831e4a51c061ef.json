{"uid":"7831e4a51c061ef","name":"缺失grant_type","fullName":"testcases.login.test_login.TestWeChatLogin#test_get_tag","historyId":"5cff17b07312aaab02d77905c510fa84","time":{"start":1664531510133,"stop":1664531510246,"duration":113},"description":"获取token","descriptionHtml":"<p>获取token</p>\n","status":"failed","statusMessage":"AssertionError: E0003: expires_in断言失败, 响应结果中不存在 expires_inE0004: access_token断言失败, 响应结果中不存在 access_token\nassert 2 == 0","statusTrace":"self = <test_login.TestWeChatLogin object at 0x000001167CE98A30>\ncase_data = {'des': '获取token', 'extract': {'access_token': '\"access_token\":\"(.*?)\"', 'expires_in': 'expires_in'}, 'host': '${get_host(wechat)}', 'name': '缺失grant_type', ...}\n\n    @pytest.mark.run(order=1)\n    @pytest.mark.parametrize(\n        \"case_data\",\n        parameters_util.format_all_case_data(__file__))\n    def test_get_tag(self, case_data):\n        report_format(case_data)  # 处理报告信息\n    \n        try:\n            res, assert_flag, assert_msg = RequestUtil().analysis_yaml(\n                case_data)\n        except Exception as e:\n            error_log(e)\n    \n        if isinstance(res, str):\n            assert False, res\n        print(res.status_code)\n        print(\">>>>>:请求url\")\n        print(res.url)\n        print(\">>>>>:请求body\")\n        print(res.request.body)\n        print(\">>>>>: 响应数据\")\n        print(res.json())\n        allure.attach(res.text, \"响应结果\", allure.attachment_type.JSON)\n    \n        if assert_msg:\n            write_log(assert_msg, \"error\")\n    \n>       assert assert_flag == 0, assert_msg\nE       AssertionError: E0003: expires_in断言失败, 响应结果中不存在 expires_inE0004: access_token断言失败, 响应结果中不存在 access_token\nE       assert 2 == 0\n\ntestcases\\login\\test_login.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"获取token","status":"failed","statusMessage":"AssertionError: E0003: expires_in断言失败, 响应结果中不存在 expires_inE0004: access_token断言失败, 响应结果中不存在 access_token\nassert 2 == 0","statusTrace":"self = <test_login.TestWeChatLogin object at 0x000001167CE98A30>\ncase_data = {'des': '获取token', 'extract': {'access_token': '\"access_token\":\"(.*?)\"', 'expires_in': 'expires_in'}, 'host': '${get_host(wechat)}', 'name': '缺失grant_type', ...}\n\n    @pytest.mark.run(order=1)\n    @pytest.mark.parametrize(\n        \"case_data\",\n        parameters_util.format_all_case_data(__file__))\n    def test_get_tag(self, case_data):\n        report_format(case_data)  # 处理报告信息\n    \n        try:\n            res, assert_flag, assert_msg = RequestUtil().analysis_yaml(\n                case_data)\n        except Exception as e:\n            error_log(e)\n    \n        if isinstance(res, str):\n            assert False, res\n        print(res.status_code)\n        print(\">>>>>:请求url\")\n        print(res.url)\n        print(\">>>>>:请求body\")\n        print(res.request.body)\n        print(\">>>>>: 响应数据\")\n        print(res.json())\n        allure.attach(res.text, \"响应结果\", allure.attachment_type.JSON)\n    \n        if assert_msg:\n            write_log(assert_msg, \"error\")\n    \n>       assert assert_flag == 0, assert_msg\nE       AssertionError: E0003: expires_in断言失败, 响应结果中不存在 expires_inE0004: access_token断言失败, 响应结果中不存在 access_token\nE       assert 2 == 0\n\ntestcases\\login\\test_login.py:54: AssertionError","steps":[],"attachments":[{"uid":"aa2a0171364325f9","name":"响应结果","source":"aa2a0171364325f9.json","type":"application/json","size":79},{"uid":"b6aa1ea63286e4d3","name":"log","source":"b6aa1ea63286e4d3.txt","type":"text/plain","size":752}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"wechat项目"},{"name":"feature","value":"登录"},{"name":"tag","value":"登录"},{"name":"tag","value":"run(order=1)"},{"name":"parentSuite","value":"testcases.login"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestWeChatLogin"},{"name":"host","value":"DESKTOP-AKUI69U"},{"name":"thread","value":"30004-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.login.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_data","value":"{'report_info': {'epic': 'wechat项目', 'feature': '登录', 'tags': ['登录']}, 'name': '缺失grant_type', 'des': '获取token', 'host': '${get_host(wechat)}', 'parameters': {'name-des-method-grant_type-appid-secret': '/data/login_data.csv'}, 'request': {'url_path': '/cgi-bin/token', 'method': 'get', 'params': {'grant_type': '', 'appid': 'wxd3bf30272b1def4f', 'secret': '3df1dde2526a65de86c5e18db3f2d421'}}, 'extract': {'access_token': '\"access_token\":\"(.*?)\"', 'expires_in': 'expires_in'}, 'validata': [{'equals': {'status_code': 200}}, {'equals': {'expires_in': 7200}}, {'contains': 'access_token'}]}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["登录","run(order=1)"]},"source":"7831e4a51c061ef.json","parameterValues":["{'report_info': {'epic': 'wechat项目', 'feature': '登录', 'tags': ['登录']}, 'name': '缺失grant_type', 'des': '获取token', 'host': '${get_host(wechat)}', 'parameters': {'name-des-method-grant_type-appid-secret': '/data/login_data.csv'}, 'request': {'url_path': '/cgi-bin/token', 'method': 'get', 'params': {'grant_type': '', 'appid': 'wxd3bf30272b1def4f', 'secret': '3df1dde2526a65de86c5e18db3f2d421'}}, 'extract': {'access_token': '\"access_token\":\"(.*?)\"', 'expires_in': 'expires_in'}, 'validata': [{'equals': {'status_code': 200}}, {'equals': {'expires_in': 7200}}, {'contains': 'access_token'}]}"]}